services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      # - "--log.level=DEBUG"
      - "--api"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      -  --certificatesresolvers.le.acme.email=${ACME_MAIL}
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # -  "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_MAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./data/config/letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TRAEFIK_DOMAIN=${TRAEFIK_DOMAIN}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.middlewares.my-auth.basicauth.users=${HTTP_USER}:${HTTP_PASSWORD}"
      - "traefik.http.routers.traefik.middlewares=my-auth"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  sonarr:
    image: ghcr.io/linuxserver/sonarr:develop
    container_name: sonarr
    restart: unless-stopped
    volumes:
      - ./data/config/sonarr:/config
      - ./data/torrents:/torrents
      - ./data/media:/media
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    ports:
      - 8989:8989

  radarr:
    image: ghcr.io/linuxserver/radarr:develop
    container_name: radarr
    restart: unless-stopped
    volumes:
      - ./data/config/radarr:/config
      - ./data/torrents:/torrents
      - ./data/media:/media
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    ports:
      - 7878:7878

  overseerr:
    image: ghcr.io/linuxserver/overseerr
    container_name: overseerr
    restart: always
    volumes:
      - ./data/config/overseerr:/config
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls.certresolver=myresolver"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
    ports:
      - 5055:5055

  deluge:
    image: ghcr.io/linuxserver/deluge
    container_name: deluge
    restart: unless-stopped
    volumes:
      - ./data/torrents:/torrents
      - ./data/config/deluge:/config
      - ./data/downloads:/downloads
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.deluge.entrypoints=websecure"
      - "traefik.http.routers.deluge.tls.certresolver=myresolver"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"
      
  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    restart: always
    volumes:
      - ./data/config/jackett:/config
      - ./data/torrents:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    ports:
      - 9117:9117
      

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    # ports:
      # - "32400:32400"
      # - "32400:32400/udp"
      # - "32469:32469"
      # - "32469:32469/udp"
      # - "32410:32410/udp"
      # - "32412:32412/udp"
      # - "32413:32413/udp"
      # - "32414:32414/udp"
    # devices:
      # - /dev/dri:/dev/dri # for hardware transcoding
    volumes:
      - ./data/config/plex:/config
      - ./data/torrents:/torrents
      - ./data/media:/media
      # - /dev/shm:/transcode
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - VERSION=latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"